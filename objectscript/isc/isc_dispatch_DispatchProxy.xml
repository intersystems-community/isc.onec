<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Apple Mac OS X for x86-64) 2014.2 (Build 240U)" ts="2014-04-28 15:49:15">
<Class name="isc.dispatch.DispatchProxy">
<Description>
Класс реализация IProxy для использования Dynamic Dispatch механизма Cache Object Script
См. Docbook</Description>
<Abstract>1</Abstract>
<Super>IProxy,IDispatch</Super>
<TimeChanged>62084,72229.818849</TimeChanged>
<TimeCreated>61434,59704.191294</TimeCreated>
<Inheritance>right</Inheritance>

<Method name="%DispatchClassMethod">
<ClassMethod>1</ClassMethod>
<FormalSpec>class:%String,method:%String,args...</FormalSpec>
<Implementation><![CDATA[
   
   d ..beforeClassMethod(class,method,args...) 
    // return a null string to the caller if a return value is expected
    if class = "" && method = "" {
        quit:$QUIT "" quit
    }
    else {
	    s result = ""
        // args are returned
        if $QUIT {
            s result = ..insteadOfClassMethod(class,method,args...) 
            d ..afterClassMethod(class,method,result,args...)
            quit result
        }
        // no args are returned
        else {
            d ..insteadOfClassMethod(class,method,args...) 
            d ..afterClassMethod(class,method,result,args...)
            quit
        }
    }
]]></Implementation>
</Method>

<Method name="%DispatchMethod">
<FormalSpec>method:%String,args...</FormalSpec>
<Implementation><![CDATA[
	d ..before(method,args...) 
    // return a null string to the caller if a return value is expected
    if method = "" {
        quit:$QUIT "" quit
    }
    else {
	    s result = ""
        // args are returned
        if $QUIT {
            s result = ..insteadOf(method,args...) 
            d ..after(method,result,args...)
            quit result
        }
        // no args are returned
        else {
            d ..insteadOf(method,args...) 
            d ..after(method,result,args...)
            quit
        }
    }
]]></Implementation>
</Method>

<Method name="%DispatchGetProperty">
<FormalSpec>property:%String</FormalSpec>
<Implementation><![CDATA[
	d ..beforeGet(property)
	s result =  ..insteadOfGet(property)
	d ..afterGet(property)
	
	quit result
]]></Implementation>
</Method>

<Method name="%DispatchSetProperty">
<FormalSpec>property:%String,value</FormalSpec>
<Implementation><![CDATA[
	d ..beforeSet(property,value)
	d ..insteadOfSet(property,value)
	d ..afterSet(property,value)
]]></Implementation>
</Method>

<Method name="%DispatchSetMultidimProperty">
<FormalSpec>property:%String,value,subs...</FormalSpec>
<Implementation><![CDATA[	//@TODO implement method
]]></Implementation>
</Method>

<Method name="%DispatchGetModified">
<FormalSpec>property:%String</FormalSpec>
<Implementation><![CDATA[	//@TODO implement method
]]></Implementation>
</Method>

<Method name="%DispatchSetModified">
<FormalSpec>property:%String,value</FormalSpec>
<Implementation><![CDATA[	//@TODO implement method
]]></Implementation>
</Method>
</Class>
</Export>
