<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Apple Mac OS X for x86-64) 2014.2 (Build 240U)" ts="2014-04-28 15:49:16">
<Class name="isc.onec.util.Time">
<Description>
Methods to convert 1C date to/from Cache date types (%Date,%Time,%Timestamp,$h).
1C date that is coming from 1C is expected to be in "YYYY-MM-DD HH:MI:SS" format with default value "0100-01-01 00:00:00".
1C date that is sent back to 1C is expected to be in "YYYYMMDDHHMISS" format with default value as "01000101000000".</Description>
<TimeChanged>61888,76817.425707</TimeChanged>
<TimeCreated>61835,43184.586263</TimeCreated>

<Parameter name="DEFAULT1CDATE">
<Default>0100-01-01 00:00:00</Default>
</Parameter>

<Parameter name="DEFAULTINTERNAL1CDATETIME">
<Default>01000101000000</Default>
</Parameter>

<Parameter name="DEFAULTINTERNAL1CDATE">
<Default>01000101</Default>
</Parameter>

<Parameter name="DEFAULTINTERNAL1CTIME">
<Default>000000</Default>
</Parameter>

<Method name="now">
<Description>
Returns current time in OneC  internal format</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[	q $tr($zd($h,3)_$zt($p($h,",",2),1),"-:","")
]]></Implementation>
</Method>

<Method name="isDefault">
<Description>
Checks wether it is default 1C output date</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>onecDate</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
	if (onecDate = ..#DEFAULT1CDATE)||(onecDate="")  quit 1
	quit 0
]]></Implementation>
</Method>

<Method name="toTimeStamp">
<Description>
Converts 1C output date to %Timestamp</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>onecDate=""</FormalSpec>
<ReturnType>%TimeStamp</ReturnType>
<Implementation><![CDATA[
	
   if ..isDefault(onecDate) quit ""    
   quit onecDate
]]></Implementation>
</Method>

<Method name="fromTimeStamp">
<Description>
Converts %TimeStamp to 1C inner date</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ts=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:ts="" ..#DEFAULTINTERNAL1CDATETIME
	q $e($tr(ts,"-: ",""),1,14)
]]></Implementation>
</Method>

<Method name="toDate">
<Description>
Converts 1C output date to %Date</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>onecDate="0100-01-01 00:00:00"</FormalSpec>
<ReturnType>%Date</ReturnType>
<Implementation><![CDATA[
	if ..isDefault(onecDate) quit 0 
	
	quit $system.SQL.TODATE(onecDate,"yyyy-mm-dd")
]]></Implementation>
</Method>

<Method name="fromDate">
<ClassMethod>1</ClassMethod>
<FormalSpec>ts=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:ts="" ..#DEFAULTINTERNAL1CDATETIME
	q $system.SQL.TOCHAR(ts,"yyyymmdd")_..#DEFAULTINTERNAL1CTIME
]]></Implementation>
</Method>

<Method name="toTime">
<ClassMethod>1</ClassMethod>
<FormalSpec>onecDate="0100-01-01 00:00:00"</FormalSpec>
<ReturnType>%Date</ReturnType>
<Implementation><![CDATA[
	if ..isDefault(onecDate) quit 0	
	quit $zth($p(onecDate," ",2),1)
]]></Implementation>
</Method>

<Method name="fromTime">
<ClassMethod>1</ClassMethod>
<FormalSpec>ts=""</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	q:ts="" ..#DEFAULTINTERNAL1CDATETIME
	q ..#DEFAULTINTERNAL1CDATE_$tr($zt(ts,1),":","")
]]></Implementation>
</Method>

<Method name="toCacheDate">
<ClassMethod>1</ClassMethod>
<FormalSpec>onecDate="0100-01-01 00:00:00"</FormalSpec>
<Implementation><![CDATA[	 quit ..toDate(onecDate)
]]></Implementation>
</Method>

<Method name="fromCacheDate">
<ClassMethod>1</ClassMethod>
<FormalSpec>ts=""</FormalSpec>
<Implementation><![CDATA[	quit ..fromCacheDate(ts)
]]></Implementation>
</Method>

<Method name="timestamp">
<Description>
TODO Move to isc.util.Time</Description>
<ClassMethod>1</ClassMethod>
<ReturnType>%TimeStamp</ReturnType>
<Implementation><![CDATA[	quit $ZDATETIME($ZTIMESTAMP,3,1)
]]></Implementation>
</Method>

<Method name="getDatesArray">
<ClassMethod>1</ClassMethod>
<FormalSpec>ts:%TimeStamp,d</FormalSpec>
<Implementation><![CDATA[
	s d("y") = $system.SQL.YEAR(ts)
	s d("m") = $system.SQL.MONTH(ts)
	s d("d") = $system.SQL.DAYOFMONTH(ts)
	s d("h") = $system.SQL.HOUR(ts)
	s d("mi") = $system.SQL.MINUTE(ts)
	s d("s") = $system.SQL.SECOND(ts)
]]></Implementation>
</Method>
</Class>
</Export>
